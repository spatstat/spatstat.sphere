% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/s2random.R
\name{s2runif}
\alias{s2runif}
\title{Generate uniform random points on sphere}
\usage{
s2runif(
  n,
  region = s2(...),
  giveup = 1000,
  warn = TRUE,
  ...,
  nsim = 1,
  drop = TRUE,
  ex = NULL
)
}
\arguments{
\item{n}{Number of points. Can be a vector in which case \code{nsim} should be
equal to \code{length(n)} (happens automatically if \code{nsim} is missing).}

\item{region}{Region (of class \code{"s2region"}) to simulate the pattern in.
Defaults to the unit sphere.}

\item{giveup}{Number of attempts in the rejection method after which the
algorithm should stop trying to generate new points.}

\item{warn}{Logical. Whether to issue a warning if `n`` is very large. See Details.}

\item{...}{
  Arguments passed on to \code{\link[=s2]{s2}}
  \describe{
    \item{\code{radius}}{Numeric. Defaults to 1. For convenience this can also be an
object of class \code{"s2region"} from where the radius and unitname then will be
extracted.}
    \item{\code{unitname}}{Optional. Name of unit of length. Either a single character
string, or a vector of two character strings giving the singular and plural
forms, respectively.}
  }}

\item{nsim}{Number of simulated realisations to be generated.}

\item{drop}{Logical. If \verb{nsim = 1`` and }drop = TRUE` (the default), the
result will be a point pattern, rather than a list containing a point pattern.}

\item{ex}{Optional. A point pattern to use as the example. If \code{ex} is given and
\code{n} and \code{region} are missing, then \code{n} and \code{region} will be calculated from
the point pattern \code{ex}.}
}
\value{
A point pattern on the sphere (an object of class "s2pp") if
\code{nsim = 1} and \code{drop = TRUE}, or a list of point patterns otherwise.
}
\description{
Generate uniform random points on sphere.
}
\details{
This function generates \code{n} independent random points, uniformly
distributed in the region \code{region} on the sphere.
The algorithm depends on the type of region, as follows:
\itemize{
\item If \code{region} is a box in longitude and latitude coordinates (\code{"s2lonlatbox"})
then \code{n} independent random points, uniformly distributed in the box, are
generated by assigning uniform random values to their lon,lat coordinates
using the appropriate \code{acos} transform for the latitude coordinates.
\item If \code{region} is a polygon or cap, the algorithm uses the rejection method.
It finds a \code{s2lonlatbox} enclosing the region, generates points in this box,
and tests whether they fall in the desired region. It gives up when
\code{giveup * n} tests have been performed without yielding \code{n} successes.
}

If \code{warn = TRUE}, then a warning will be issued if \code{n} is very large. The
threshold is \verb{[spatstat.options("huge.npoints")](spatstat::spatstat.options)}.
This warning has no consequences, but it helps to trap a number of common errors.
}
\examples{
X <- s2runif(10)
loop <- cbind(lon = c(0, 60, 60, 0), lat = c(-40, -40, 40, 40))
poly <- s2polygon(loop)
s2runif(10, region = poly)
s2runif(c(10, 20), region = poly)
}
